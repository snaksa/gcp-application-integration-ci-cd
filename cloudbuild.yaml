steps:
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: 'gcloud'
#    timeout: 240s
#    args: ['builds', 'list']

#  - name: 'ubuntu'
#    script: |
#      export token=$(gcloud auth print-access-token)
#      export project=$(gcloud config get-value project | head -n 1)
#      export region=us-central1
#
#  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli'
#    entrypoint: 'integrationcli'
#    timeout: 240s
#    args: ['prefs', 'set', '-p', '$project', '-r', '$region', '-t', '$token']
#
#  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli'
#    entrypoint: 'integrationcli'
#    timeout: 240s
#    args: ['prefs', 'set', '-p', '$project', '-r', '$region', '-t', '$token']
#


#  - name: 'ubuntu'
#    entrypoint: 'sh'
#    args:
#      - '-c'
#      - |
#        curl -L https://raw.githubusercontent.com/GoogleCloudPlatform/application-integration-management-toolkit/main/downloadLatest.sh | sh -
#        token=$(gcloud auth print-access-token)
#        project=$(gcloud config get-value project | head -n 1)
#        region=us-central1
#        pwd
#        ls -la
#        /.integrationcli/bin/integrationcli prefs set -p $project -r $region -t $token
#
#        /.integrationcli/bin/integrationcli integrations list
#    timeout: 240s
#
#
#  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli'
#    entrypoint: 'integrationcli'
#    timeout: 240s
#    args: ['prefs', 'set', '-p', '$project', '-r', '$region', '-t', '$token']

#  - name: 'ubuntu'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        export token=$(gcloud auth print-access-token)
#        export project=$(gcloud config get-value project | head -n 1)
#        export region=us-central1

#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        ./build.sh
#    timeout: 240s

#  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli'
#    entrypoint: 'integrationcli'
#    timeout: 240s
#    args: ['integrations', 'list', '-p', '$project', '-r', '$region', '-t', '$token']
#
#  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli'
#    entrypoint: 'integrationcli'
#    timeout: 240s
#    args: ['integrations', 'list']


  # Step to pull the Docker image
#  - name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        docker pull us-docker.pkg.dev/appintegration-toolkit/images/integrationcli-builder:latest
#
#  # Step to use the CLI from the Docker image
#  - name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        docker run --rm \
#          -v /workspace:/workspace \  # Mount workspace if needed
#          us-docker.pkg.dev/appintegration-toolkit/images/integrationcli-builder:latest \
#          integrationcli

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Authenticate to Google Cloud
        gcloud auth configure-docker us-docker.pkg.dev
        
        # Set multiple variables
        token=$(gcloud auth print-access-token) 
        project=$(gcloud config get-value project | head -n 1)
        region="us-central1"
        
        # Write variables to a file
        echo "token=${token}" >> /workspace/env_vars.txt
        echo "project=${project}" >> /workspace/env_vars.txt
        echo "region=${region}" >> /workspace/env_vars.txt

  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:latest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        
        # Load the variables
        source /workspace/env_vars.txt
        
        integrationcli prefs set -p "$project" -r "$region" -t "$token"
        
        # Run the first integrationcli command
        integrationcli integrations apply -f . -e dev --wait=true
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET